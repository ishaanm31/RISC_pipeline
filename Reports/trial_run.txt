ADA => "00010010","10011000" // R3=R1+R2 (works)
ACC => "00010010","10011110" // R3=R1+cpl(R2) if C=1 (works)
ACW => "00010010","10011111" // R3=R1+cpl(R2)+Carry (works)
ADI => "00000010","10001010" // R2=R1+Imm(works)
LLI => "00110100","10101010" // R2<=Imm(works)
LW  => "01000010","10000010" // R1<=RAM(R2+2)(works)
SW  => "01010010","10000010" // R1=>RAM(R2+2)(works)
LM  => "01100010","00010010" // R6<=M(R1+1),R3<=M(R1+4)(works)
SM  => "01110010","00010010" // R6=>M(R1+1),R3=>M(R1+4)(works)
BEQ => "10000010","01000011" // branches to PC+6(works)
JLR => "11010010","10000011" // branches to R2, PC+2 in R1(works)
for fibonacci => "01101000","00000011","00001001","00000001","00011111","10101000","01011011","00000001","11010010","10000000"